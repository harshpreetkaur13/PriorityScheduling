#include<stdio.h>

int n;

struct schedule
{
   int process_no;
   int arrival_t,burst_t,wait_t,taround_time,completion_t;
   int flag;
}
s_obj[50];

void Sorting()
{
   struct schedule s;
   int i;
   int j;
	 
   for(i=0;i<n-1;i++)
   {
      for(j=i+1;j<n;j++)
      {
         if(s_obj[i].arrival_t > s_obj[j].arrival_t)
	 {
	    s=s_obj[i];
	    s_obj[i]=s_obj[j];
	    s_obj[j]=s;
	 }
       }
     }
}

int main()
{
   int i,t=0,b_t=0,peak;
   int a[10];
   float wait_time=0;
   float taround_time=0;
   float avg_w_t=0, avg_taround_time=0;
	 
    printf("Enter the number of process: ");
    scanf("%d",&n);
	 
    for(i=0;i<n;i++)
    {
       s_obj[i].process_no = i+1;
       printf("\nEnter Details For P%d process:- \n", s_obj[i].process_no);
       printf("Enter Arrival Time: ");
       scanf("%d", &s_obj[i].arrival_t);
       printf("Enter Burst Time: ");
       scanf("%d", &s_obj[i].burst_t);
       
       s_obj[i].flag=0;
       b_t=b_t+s_obj[i].burst_t;
     }
	 
    Sorting();
 
    for(int i=0;i<n;i++)
    {
       a[i]=s_obj[i].burst_t;
    }
    s_obj[9].burst_t=9999;
    
    for(t=s_obj[0].arrival_t; t<=b_t+1;)
    {
       peak=9;
       for(i=0;i<n;i++)
       {
          if(s_obj[i].arrival_t <= t && s_obj[i].burst_t < s_obj[peak].burst_t && s_obj[i].flag != 1)
	  {
	      peak = i;
	  }
	  if(s_obj[peak].burst_t == 0 && s_obj[i].flag != 1)
	  {
	      s_obj[i].flag=1;
	      s_obj[peak].completion_t=t;
	      s_obj[peak].burst_t=9999;
	      printf("P%d completes in %d\n",s_obj[i].process_no,s_obj[peak].completion_t);
	  }
       }
       t++;
       (s_obj[peak].burst_t)--;
    }
    
    for(i=0;i<n;i++)
    {
       s_obj[i].taround_time=(s_obj[i].completion_t)-(s_obj[i].arrival_t);
       avg_taround_time=avg_taround_time+s_obj[i].taround_time;
       s_obj[i].wait_t=((s_obj[i].taround_time)-a[i]);
       avg_w_t=avg_w_t+s_obj[i].wait_t;
    }
    
    printf("PNO\tAT\tCT\tTA\tWTt\n");
    
    for(i=0;i<n;i++)
    {
       printf("P%d\t%d\t%d\t%d\t%d\n",s_obj[i].process_no,s_obj[i].arrival_t,s_obj[i].completion_t,s_obj[i].taround_time,s_obj[i].wait_t);
    }
    
    printf("Average Turn Around Time: %f\t\n\n",avg_taround_time);
    printf("Average Waiting Time: \t %f\t\n",avg_w_t);
}
  
